# This is a sample build configuration for JavaScript.
# Check our guides at https://confluence.atlassian.com/x/14UWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: node:10.15.3

pipelines:
  default:
#    - step:
#        name: Build React Project
#        script:
#          - npm install
#          - npm run-script build #create a production build
#          - mkdir packaged
#          - tar -czvf packaged/package-${BITBUCKET_BUILD_NUMBER}.tar.gz -C build . #place the production build in a directory called packaged on bitbucket pipeline
#        artifacts:
#          - packaged/**
    - step:
        name: Deploy development and run
        image: alpine
#        trigger: manual
        deployment: test
        script:
          - apk update && apk add openssh rsync #install openssh rsync on bitbucket machine
          - ssh -i ec2-zoorest.pem -o StrictHostKeyChecking=no $DEPLOYMENT_DEV_USERNAME@$DEPLOYMENT_DEV_IP "cd $DEPLOYMENT_DEV_PATH && git fetch && git checkout --force ${BITBUCKET_COMMIT}"
          - ssh -i ec2-zoorest.pem -o StrictHostKeyChecking=no $DEPLOYMENT_DEV_USERNAME@$DEPLOYMENT_DEV_IP "cd $DEPLOYMENT_DEV_PATH && npm install"
          - ssh -i ec2-zoorest.pem -o StrictHostKeyChecking=no $DEPLOYMENT_DEV_USERNAME@$DEPLOYMENT_DEV_IP "cd $DEPLOYMENT_DEV_PATH && pm2 restart npm -- start"
#    - step:
#        name: Build and Deploy production
#        image: alpine
#        trigger: manual
#        deployment: test
#        script:
#          - npm install
#          - npm run-script build #create a production build
#          - mkdir packaged
#          - tar -czvf packaged/package-${BITBUCKET_BUILD_NUMBER}.tar.gz -C build . #place the production build in a directory called packaged on bitbucket pipeline
#          - mkdir upload #create a folder on bitbucket pipeline called upload
#          - tar -xf packaged/package-${BITBUCKET_BUILD_NUMBER}.tar.gz -C upload # extract compressed build from previous step  to upload directory on bitbucket
#          - apk update && apk add openssh rsync #install openssh rsync on bitbucket machine
#          - rsync -a  -e "ssh -o StrictHostKeyChecking=no" --delete upload/ $USERNAME@$SERVER:/var/www/temp/zoorest-${BITBUCKET_BUILD_NUMBER} # transfer build files from bitbucket to a temp directory on deployment server
#          - ssh -o StrictHostKeyChecking=no $USERNAME@$SERVER "rm -rf /var/www/html/website-dev/*"
#          - ssh -o StrictHostKeyChecking=no $USERNAME@$SERVER "mv /var/www/temp/zoorest-${BITBUCKET_BUILD_NUMBER}/* '/var/www/html/website-dev'" #move build files from the temo directory to its target directory
#          - ssh -o StrictHostKeyChecking=no $USERNAME@$SERVER "rm -rf /var/www/temp/zoorest-${BITBUCKET_BUILD_NUMBER}" #cleanup temp directory
#          - ssh -o StrictHostKeyChecking=no $USERNAME@$SERVER "chmod -R u+rwX,go+rX,go-w /var/www/html/website-dev" #grant permissions on the deployment folder
#        artifacts:
#          - packaged/**
