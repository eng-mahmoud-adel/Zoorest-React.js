version: 2.1
jobs:
  build-and-deploy-staging:
    docker:
      - image: node:12.16.1-alpine

    working_directory: ~/repo

    steps:
      - checkout
      - run: apk update && apk add openssh rsync #install openssh rsync on bitbucket machine
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: "Setup custom environment variables"
          command: echo 'export CI=false' >> $BASH_ENV
      - run: npm run-script build
      - run: mkdir packaged
      - run: tar -czvf packaged/package-${CIRCLE_BUILD_NUM}.tar.gz -C build . #place the production build in a directory called packaged on bitbucket pipeline
      - run: mkdir upload #create a folder on bitbucket pipeline called upload
      - run: tar -xf packaged/package-${BITBUCKET_BUILD_NUMBER}.tar.gz -C upload # extract compressed build from previous step  to upload directory on bitbucket
      - run: rsync -a  -e "ssh -i ec2-zoorest.pem -o StrictHostKeyChecking=no" --delete upload/ $DEPLOYMENT_STAGING_USERNAME@$DEPLOYMENT_STAGING_IP:/var/www/temp/zoorest-${BITBUCKET_BUILD_NUMBER} # transfer build files from bitbucket to a temp directory on deployment server
      - run: ssh -i ec2-zoorest.pem -o StrictHostKeyChecking=no $DEPLOYMENT_STAGING_USERNAME@$DEPLOYMENT_STAGING_IP "rm -rf $DEPLOYMENT_STAGING_PATH/*"
      - run: ssh -i ec2-zoorest.pem -o StrictHostKeyChecking=no $DEPLOYMENT_STAGING_USERNAME@$DEPLOYMENT_STAGING_IP "mv /var/www/temp/zoorest-${BITBUCKET_BUILD_NUMBER}/* $DEPLOYMENT_STAGING_PATH" #move build files from the temp directory to its target directory
      - run: ssh -i ec2-zoorest.pem -o StrictHostKeyChecking=no $DEPLOYMENT_STAGING_USERNAME@$DEPLOYMENT_STAGING_IP "rm -rf /var/www/temp/zoorest-${BITBUCKET_BUILD_NUMBER}" #cleanup temp directory
      - run: ssh -i ec2-zoorest.pem -o StrictHostKeyChecking=no $DEPLOYMENT_STAGING_USERNAME@$DEPLOYMENT_STAGING_IP "chmod -R u+rwX,go+rX,go-w $DEPLOYMENT_STAGING_PATH" #grant permissions on the deployment folder
#    steps:
#      - checkout
#      # node cache
#      - restore_cache:
#          keys:
#            - node-v4-{{ checksum "package.json" }}
#            - node-v4-
#            - run: npm install
#      - save_cache:
#          key: node-v4-{{ checksum "package.json" }}
#          paths:
#            - node_modules
#            - ~/.yarn
#      - run: apk update && apk add openssh rsync #install openssh rsync on bitbucket machine
#      - run: npm install
#      - run: unset CI
#      - run: npm run-script build
#      - run: mkdir packaged
workflows:
  build-and-deploy-staging:
    jobs:
      - build-and-deploy-staging
